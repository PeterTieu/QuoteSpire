<?xml version="1.0" encoding="utf-8"?>

<!--MANIFEST-->

<manifest xmlns:android="http://schemas.android.com/apk/res/android"
          package="com.tieutech.android.quotespire">




    <permission android:name="com.tieutech.android.quotespire.PRIVATE"
                android:protectionLevel="signature"/>




    <uses-permission android:name="android.permission.INTERNET"/>


    <!--Ask for permission to access INFORMATION about the network.
        This is required to use the getActiveNetworkInfo() method in QuoteOfTheDayIntentService.java-->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>


    <!--WRITE/READ to/from external storage - part of the STORAGE permission group. These are 'dangerous' permissions and MUST also be requested at runtime-->
    <!--Used for saving the Picture Quote in QuotePictureFragment to internal storage -->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>





    <!--Ask for permission for the STANDALONE receiver (a type of broadcast receiver) to listen for the BOOT_COMPLETED action,
    sent by the broadcast intent of the system
    NOTE: The permission protection level that android.permission.RECEIVE_BOOT_COMPLETED uses is: Normal-->
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>


    <!--Ask to access the permission that is declared above (in <permission.../>)-->
    <uses-permission android:name="com.petertieu.android.quotesearch.PRIVATE"/>




    <!--DECLARE APP COMPONENTS-->
        <!--NOTE:
            largeHeap="true": declared because app could sometimes close when the bitmapByteArray size being transferred from RandomQuotePicturesFragment to FavoriteQuotePictureViewPagerActivity is too large.
                                This makes the app throw a "TransactionTooLargeException". Making largeHeapt=true avoids this.-->
    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher_quotespire_logo"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_quotespire_logo"
        android:supportsRtl="true"
        android:theme="@style/AppThemeDark"
        android:largeHeap="true">



        <!--android:theme="@style/Theme.AppCompat.NoActionBar"-->






        <!--================== DECLARE ACTIVITIES ==================-->

        <!--IntroActivity - set to be the first activity to be opened. Serves as a launcher page-->
        <activity
            android:name=".ActivitiesAndFragments.Controllers.Activities.IntroActivity">

            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>

        </activity>





        <!--MainActivity - holds all the fragments. Serves as the core of the app-->
        <activity
            android:name=".ActivitiesAndFragments.Controllers.Activities.MainActivity"
            android:label="@string/title_activity_main"
            android:largeHeap="true">
        </activity>







        <activity
            android:name=".ActivitiesAndFragments.Controllers.Fragments.NavigationDrawer.RandomQuotePictures.QuotePictureDetailActivity"
            android:label="@string/quote_picture"
            android:theme="@style/AppThemeLight"
            android:parentActivityName=".ActivitiesAndFragments.Controllers.Activities.IntroActivity"
            android:largeHeap="true">
        </activity>




        <activity
            android:name=".ActivitiesAndFragments.Controllers.Fragments.NavigationDrawer.Favorites.SwipeTabs.QuotePictures.FavoriteQuotePictureViewPagerActivity"
            android:label="@string/quote_picture"
            android:theme="@style/AppThemeLight"
            android:parentActivityName=".ActivitiesAndFragments.Controllers.Activities.IntroActivity"
            android:largeHeap="true">
        </activity>









        <!--FileProvider for saving a Quote Picture from QuotePictureFragment as a cache, before sharing it (via implicit intent)-->
        <provider
            android:name="android.support.v4.content.FileProvider"
            android:authorities="com.tieutech.android.quotespire.fileprovider"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/file_paths" />
        </provider>











        <!--Declare/register a STANDALONE RECEIVER (a type of broadcast receiver) to the system.
        A standalone receiver is a BroadcastReceiver that is bound to the system, and therefore, MUST be declared in the Manifest.
        In this case, when the device boots, it sends a broadcast intent, BOOT_COMPLETED,
        which can be picked up by the standalone broadcast intent.
        COMPARE: DYNAMIC RECEIVER (another type of broadcast receiver), which is bound to fragment or activity (i.e. UI component), which
        listens for broadcast intents from fragment or activity, and does not need to be declared
        NOTE: A standalone (broadcast) receiver is bound to the system (whereas a DYNAMIC receiver is a receiver of the app).
            IOW, a standalone receiver is a broadcast receiver of the system.
            This means that even if the app isn't running, this broadcast receiver still listens and receives broadcast intents from the system
        -->
        <receiver android:name=".ActivitiesAndFragments.Controllers.Fragments.NavigationDrawer.Settings.PushNotification.StartupBroadcastReceiver">

            <!--...Then...
            ...after having registered the StartupReceiver (standalone receiver) to the system...
            Make the BroadcastReceiver (i.e. StartupReceiver) listen for the BOOT_COMPLETED action sent by the broadcast intent of the system.
            This action requires a permission (declared above in "<uses-permission...").
            IOW, a permission from the the system is required in order for the standalone receiver
            to listen for its actions (e.g. BOOT_COMPLETED).
            NOTE: Once the system boots up, it sends a broadcast intent that carries the action: ACTION_BOOT_COMPLETED.
            StartupReceiver will be one of the broadcast receivers to listen and receive this action, even if the app isn't on.
            This in turn, causes StartupReceiver.onReceive() to run, which then dies when it is done (pg. 563)-->
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED"/>
            </intent-filter>
        </receiver>






        <service
            android:name=".ActivitiesAndFragments.Controllers.Fragments.NavigationDrawer.Settings.PushNotification.QuoteOfTheDayIntentService"/>



        <service
            android:name=".ActivitiesAndFragments.Controllers.Fragments.NavigationDrawer.Settings.PushNotification.MyService"/>


        <receiver
            android:name=".ActivitiesAndFragments.Controllers.Fragments.NavigationDrawer.Settings.PushNotification.QuoteOfTheDayPushNotificationBroadcastReceiver"
            android:exported="false">

            <intent-filter
                android:priority="-999">
                <action
                    android:name="com.petertieu.android.quotesearch.ACTION_SHOW_PUSH_NOTIFICATION"/>


            </intent-filter>


        </receiver>





    </application>

</manifest>